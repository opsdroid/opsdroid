[tox]
envlist = py{311,312,313}{,-e2e,-noe2e}, lint, docker-{full,min}
skip_missing_interpreters = True

[gh-actions]
# only touch after reading docs/maintaining/supported-python-versions.md
python =
    3.11: py311
    3.12: py312
    3.13: py313

[gh-actions:env]
PLATFORM =
    Linux: e2e
    macOS: e2e
    Windows: noe2e

[testenv]
setenv =
    LANG=en_US.UTF-8
    PYTHONPATH = {toxinidir}
commands =
    pytest --timeout=30 --cov=opsdroid --cov-report=xml:cov.xml --cov-report term-missing:skip-covered {posargs}
    pytest --timeout=10 --only-signal-tests --cov-append --cov=opsdroid --cov-report=xml:cov.xml --cov-report term-missing:skip-covered {posargs}
extras =
     all
     test
     e2e-!noe2e: connector_matrix_e2e

[testenv:docker-{full,min}]
basepython = python3
skip_install = true
ignore_errors = True
allowlist_externals =
    docker
    bash
commands =
    min: docker build --build-arg EXTRAS= -t opsdroid-image:tmp .
    full: docker build -t opsdroid-image:tmp .
    bash -c 'docker container run -d --name opsdroid-container opsdroid-image:tmp'
    bash -c 'echo "Waiting for the container to start..."; until eval "docker inspect -f \{\{.State.Running\}\} opsdroid-container"; do sleep 1; done'
    bash -c 'echo "Installing curl in the container..."; docker exec --user root opsdroid-container sh -c "apk add --no-cache curl"'
    bash -c 'echo "Waiting until curl is succesfull..."; until eval "docker exec --user root opsdroid-container sh -c \"curl -sSf http://localhost:8080/ || exit 1\""; do sleep 1; done'
    docker logs opsdroid-container
    docker stop opsdroid-container
    docker rm opsdroid-container
    docker rmi opsdroid-image:tmp

[testenv:docs]
basepython = python3.13 # only touch after reading docs/maintaining/supported-python-versions.md
changedir = docs
ignore_errors = True
allowlist_externals = sphinx-build, sh, deadlinks
commands =
     sphinx-build --color -W --keep-going -b html . _build/ {posargs}
     ; running python's http server to serve documentation on 127.0.0.1:3001
     sh -c 'cd _build/ && python -m http.server 3001 2>&1 > /dev/null &'
     ; checking liveness
     deadlinks http://127.0.0.1:3001/ -n 10 -r 3 --no-progress --fiff

[testenv:lint]
basepython = python3
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files
